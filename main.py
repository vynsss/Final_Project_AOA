from maze.solve import *
from maze.Generator import *

#
# maze = [[[2, 0, 0, 1, 1], [1, 0, 0, 0, 0], [0, 1, 1, 0, 0], [0, 0, 3, 0, 0], [3, 0, 0, 1, 0]],
#         [[1, 1, 0, 0, 3], [0, 0, 2, 1, 1], [0, 0, 1, 1, 1], [1, 0, 2, 0, 1], [0, 0, 3, 1, 1]],
#         [[2, 0, 1, 1, 2], [0, 3, 2, 3, 0], [0, 3, 0, 1, 1], [1, 0, 1, 1, 1], [0, 1, 0, 0, 0]],
#         [[3, 0, 0, 3, 0], [0, 2, 3, 2, 0], [0, 2, 0, 0, 1], [0, 1, 2, 2, 1], [0, 1, 1, 1, 0]],
#         [[1, 1, 1, 0, 1], [1, 1, 1, 0, 0], [1, 1, 0, 0, 1], [0, 0, 0, 1, 1], [1, 1, 0, 0, 3]]]

# maze = [[[2, 0, 1, 3, 0], [1, 0, 3, 0, 0], [3, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 1]],
#         [[0, 0, 3, 2, 0], [0, 0, 2, 3, 0], [2, 0, 0, 3, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],
#         [[0, 0, 1, 0, 1], [3, 0, 0, 2, 1], [0, 3, 0, 2, 0], [1, 3, 0, 0, 0], [0, 0, 0, 0, 0]],
#         [[3, 0, 1, 0, 0], [2, 0, 3, 2, 1], [0, 2, 0, 2, 0], [0, 2, 3, 0, 0], [0, 0, 0, 0, 0]],
#         [[2, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0, 0], [0, 2, 2, 0, 1], [1, 0, 1, 0, 3]]]
n = 5

print("""
⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆
||𝙒𝙀𝙇𝘾𝙊𝙈𝙀 𝙏𝙊 𝙊𝙐𝙍 3𝘿 𝙈𝘼𝙕𝙀 𝙂𝙀𝙉𝙀𝙍𝘼𝙏𝙊𝙍 & 𝙎𝙊𝙇𝙑𝙀𝙍 ||
⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆
""")

maze, n = generate()

while True:
    print("""
❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀
       Choose Solving Method
❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀

❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀
↠↠↠↠↠  ①.   𝐒𝐎𝐋𝐕𝐄 𝐔𝐒𝐈𝐍𝐆 𝐀*         ↠↠↠ 
❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀
↠↠↠↠↠  ②.   𝐒𝐎𝐋𝐕𝐄 𝐔𝐒𝐈𝐍𝐆 𝐁𝐅𝐒        ↠↠↠
❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀
↠↠↠↠↠  ③.   𝙀𝙓𝙄𝙏                    ↠↠↠
❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀
    """)

    choice = input("Choose: ")

    if choice != "1" and choice != "2" and choice != "0":
        print("Wrong Input! Try Again...")

    elif choice == "0":
        print("𝙀𝙓𝙄𝙏𝙄𝙉𝙂... 𝙂𝙊𝙊𝘿𝘽𝙔𝙀")
        exit(0)


    elif choice == "1":
        solve_astar(maze, n)
        print ("𝐒𝐎𝐋𝐕𝐄 𝐔𝐒𝐈𝐍𝐆 𝐀*")
        #A* thing

    elif choice == "2":
        solve_BFS(maze, n)
        print("𝐒𝐎𝐋𝐕𝐄 𝐔𝐒𝐈𝐍𝐆 𝐁𝐅𝐒")
        #BFS